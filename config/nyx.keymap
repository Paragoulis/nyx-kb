/* -*- mode: dts; -*-
 *
 * Copyright (c) 2020 Tad Fisher
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define UPPER   2
#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)
#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT

#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
    time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

&mmv {
    time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

/ {
    behaviors {
        // This is mod-tap with the "balanced" flavor.
        // Improves the '&mt RCTRL SPACE' behavior when typing quickly.

        bmt: balanced_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // | `       | 1    | 2    | 3      | 4       | 5       | -          | =              | 6          | 7       | 8       | 9     | 0      | -       |
            // | [       | Q    | W    | E      | R       | T       | //         | \\             | Y          | U       | I       | O     | P      | ]       |
            // | (       | A    | S    | D      | F       | G       | ESC        | TAB            | H          | J       | K       | L     | ;      | )       |
            // | LSHIFT  | Z    | X    | C      | V       | B       | DEL        | BSPC           | N          | M       | ,       | .     | '      | RSHIFT  |
            // |         |      |      | LGUI   | FN      | LCTL    | LALT       | SPC / RCTL     | RET        | RCTL    | RALT    |       |        |         |

            bindings = <
&kp GRAVE        &kp N1  &kp N2       &kp N3        &kp N4        &kp N5     &kp C_VOL_UP            &kp C_VOLUME_DOWN     &kp N6         &kp N7         &kp N8       &kp N9      &kp N0     &kp MINUS
&kp LBKT         &kp Q   &kp W        &kp E         &kp R         &kp T      &kp C_MUTE              &kp C_PLAY_PAUSE      &kp Y          &kp U          &kp I        &kp O       &kp P      &kp RBKT
&kp CAPSLOCK     &kp A   &bmt LALT S  &bmt LCTRL D  &bmt LSHFT F  &kp G      &kp LGUI                &kp RGUI              &kp H          &mt RSHFT J    &mt RCTRL K  &mt RALT L  &kp SEMI   &kp APOS
&kp PRINTSCREEN  &kp Z   &kp X        &kp C         &kp V         &kp B      &kp C_BRIGHTNESS_INC    &kp C_BRIGHTNESS_DEC  &kp N          &kp M          &kp COMMA    &kp DOT     &kp SLASH  &kp BACKSLASH
                                      &kp SPACE     &lt 1 TAB     &lt 2 RET  &kp ESC                 &kt INS               &bmt RALT RET  &kp BACKSPACE  &kp DELETE
            >;
        };

        nav_layer {
            // |      | F1   | F2     | F3      | F4     | F5  |      |      | F6      | F7     | F8     | F9      | F10   | F11   |
            // |      |      |        | PG UP   |        |     |      |      |         |        | ↑      |         |       | F12   |
            // |      |      | HOME   | PG DOWN | END    |     |      |      |         | ←      | ↓      | →       |       |       |
            // |      |      |        |         |        |     |      |      |         |        |        |         |       |       |
            // |      |      |        |         |        |     |      |      | SPC     |        |        |         |       |       |

            bindings = <
&trans  &kp F1    &kp F2    &kp F3     &kp F4     &kp F5  &trans    &trans     &kp F6         &kp F7      &kp F8     &kp F9     &kp F10    &kp F11
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans     &trans         &kp HOME    &kp PG_DN  &kp PG_UP  &kp END    &kp F12
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &trans    &trans     &trans         &kp LEFT    &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans     &trans         &trans      &trans     &trans     &trans     &trans
                            &trans     &trans     &trans  &trans    &kp SPACE  &kp BACKSPACE  &kp DELETE  &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans  &trans     &trans            &trans            &trans          &trans             &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans  &trans     &trans            &trans            &trans          &trans             &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &trans    &trans  &trans     &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT    &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans  &trans     &mwh SCROLL_LEFT  &mwh SCROLL_DOWN  &mwh SCROLL_UP  &mwh SCROLL_RIGHT  &trans
                            &trans     &trans     &trans  &trans    &trans  &mkp LCLK  &mkp MCLK         &mkp RCLK
            >;
        };

        num_layer {
            bindings = <
&trans  &trans        &trans  &trans         &trans  &trans            &trans    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp KP_MINUS  &kp N7  &kp N4         &kp N1  &kp KP_ASTERISK   &trans    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp KP_PLUS   &kp N8  &kp N5         &kp N2  &kp KP_EQUAL      &trans    &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp KP_COMMA  &kp N9  &kp N6         &kp N3  &kp KP_SLASH      &trans    &trans  &trans  &trans     &trans     &trans    &trans    &trans
                              &kp LESS_THAN  &kp N0  &kp GREATER_THAN  &trans    &trans  &trans  &trans     &trans
            >;
        };

        upper_layer {
            // | BT_CLR   | BT_SEL 0   | BT_SEL 1   | BT_SEL 2   | BT_SEL 3   | BT_SEL 4   |      |      |      |      |      |      |      |      |
            // |          |            |            |            |            |            |      |      |      |      |      |      |      |      |
            // |          |            |            |            |            |            |      |      |      |      |      |      |      |      |
            // |          |            |            |            |            |            |      |      |      |      |      |      |      |      |
            // |          |            |            |            |            |            |      |      |      |      |      |      |      |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_upperl {
            timeout-ms = <50>;
            key-positions = <56 57>;
            bindings = <&mo 4>;
        };

        combo_upperr {
            timeout-ms = <50>;
            key-positions = <62 63>;
            bindings = <&mo 4>;
        };
    };
};
